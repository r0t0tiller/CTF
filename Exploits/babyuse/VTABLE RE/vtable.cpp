#include <iostream>
#include <stdio.h>

using namespace std;

void Pause()
{
  printf("%s\n", "Pausing...");
}

class B1    //base class
{
public:
  virtual void f0() 
  {
    printf("%s\n", "B1 - F0");

    char* ptr = "AAAAAAAA";
  }
  virtual void f1() 
  {
    printf("%s\n", "B1 - F1");

    char* ptr = "AAAAAAAA";
  }
};

class B2    //base class
{
public:
  virtual void f2()
  {
    printf("%s\n", "B2 - F2");

    char* ptr = "AAAAAAAA";
  }
  virtual void f3()
  {
    printf("%s\n", "B2 - F3");

    char* ptr = "AAAAAAAA";
  }
};

class D : public B1, public B2 {    //derived class inherits both base classes
public:
  void d()
  {
    printf("%s\n", "D - D0");

    char* ptr = "AAAAAAAA";
  }
  void f0()
  {
    printf("%s\n", "D - F0");

    char* ptr = "AAAAAAAA";
  }  // override B1::f0()
  void f1()
  {
    printf("%s\n", "D - F1");

    char* ptr = "AAAAAAAA";
  }  // override B1::f1()
  void f2()
  {
    printf("%s\n", "D - F2");

    char* ptr = "AAAAAAAA";
  }  // override B2::f2()
  void f3()
  {
    printf("%s\n", "D - F3");

    char* ptr = "AAAAAAAA";
  }  // override B2::f3()
};

int main(int argc, char* argv[])
{
    B2 *b2 = new B2();
    D  *d  = new D();
    Pause();
    d->f0();    //vtable lookup
    Pause();
    d->f1();    //vtable lookup
    d->f2();    //vtable lookup
    d->f3();    //vtable lookup
}