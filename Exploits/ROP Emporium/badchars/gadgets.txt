Gadgets information
============================================================
0x00000000004007e2 : adc byte ptr [rax], ah ; jmp rax
0x0000000000400b37 : add bl, al ; pop rdi ; ret
0x0000000000400bbf : add bl, dh ; ret
0x0000000000400bbd : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400bbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000400b2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [r15], r14b ; ret
0x00000000004007ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400bbc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400b2c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [r15], r14b ; ret
0x00000000004006ab : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004007ee : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400bbe : add byte ptr [rax], al ; ret
0x0000000000400b2e : add byte ptr [rax], al ; xor byte ptr [r15], r14b ; ret
0x0000000000400aab : add byte ptr [rax], bh ; ret 0x1075
0x0000000000400858 : add byte ptr [rcx], al ; ret
0x0000000000400854 : add eax, 0x20084e ; add ebx, esi ; ret
0x0000000000400859 : add ebx, esi ; ret
0x00000000004006ae : add esp, 8 ; ret
0x00000000004006ad : add rsp, 8 ; ret
0x0000000000400857 : and byte ptr [rax], al ; add ebx, esi ; ret
0x0000000000400d4b : call qword ptr [rcx]
0x000000000040087e : call rax
0x0000000000400ad4 : clc ; cmp rax, qword ptr [rbp - 0x30] ; jb 0x400a8f ; nop ; pop rbp ; ret
0x0000000000400a3d : clc ; pop rbp ; ret
0x0000000000400ad6 : cmp eax, dword ptr [rbp - 0x30] ; jb 0x400a8d ; nop ; pop rbp ; ret
0x0000000000400ad5 : cmp rax, qword ptr [rbp - 0x30] ; jb 0x400a8e ; nop ; pop rbp ; ret
0x0000000000400b9c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400879 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400a38 : jb 0x400a15 ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400ad9 : jb 0x400a8a ; nop ; pop rbp ; ret
0x00000000004007dd : je 0x4007f8 ; pop rbp ; mov edi, 0x601080 ; jmp rax
0x000000000040082b : je 0x400840 ; pop rbp ; mov edi, 0x601080 ; jmp rax
0x0000000000400878 : je 0x400871 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004007e5 : jmp rax
0x00000000004009dd : leave ; ret
0x0000000000400853 : mov byte ptr [rip + 0x20084e], 1 ; ret
0x0000000000400b35 : mov dword ptr [rbp], esp ; ret
0x00000000004008ee : mov eax, 0 ; pop rbp ; ret
0x0000000000400a3b : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040087c : mov ebp, esp ; call rax
0x00000000004007e0 : mov edi, 0x601080 ; jmp rax
0x0000000000400b34 : mov qword ptr [r13], r12 ; ret
0x0000000000400a3a : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x000000000040087b : mov rbp, rsp ; call rax
0x00000000004009dc : nop ; leave ; ret
0x00000000004009ed : nop ; pop rbp ; ret
0x00000000004007e8 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000400bb8 : nop dword ptr [rax + rax] ; ret
0x0000000000400835 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400856 : or byte ptr [rax], ah ; add byte ptr [rcx], al ; ret
0x0000000000400855 : or byte ptr [rax], r12b ; add byte ptr [rcx], al ; ret
0x0000000000400bac : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b3b : pop r12 ; pop r13 ; ret
0x0000000000400bae : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b3d : pop r13 ; ret
0x0000000000400b40 : pop r14 ; pop r15 ; ret
0x0000000000400b42 : pop r15 ; ret
0x0000000000400852 : pop rbp ; mov byte ptr [rip + 0x20084e], 1 ; ret
0x00000000004007df : pop rbp ; mov edi, 0x601080 ; jmp rax
0x0000000000400bab : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400baf : pop rbp ; pop r14 ; pop r15 ; ret
0x00000000004007f0 : pop rbp ; ret
0x0000000000400b39 : pop rdi ; ret
0x0000000000400b41 : pop rsi ; pop r15 ; ret
0x0000000000400bad : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000400b3c : pop rsp ; pop r13 ; ret
0x000000000040087a : push rbp ; mov rbp, rsp ; call rax
0x00000000004006b1 : ret
0x0000000000400aad : ret 0x1075
0x00000000004006a9 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000400ad7 : sal byte ptr [r10 - 0x55], 1 ; nop ; pop rbp ; ret
0x0000000000400877 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x0000000000400ad8 : sal byte ptr [rdx - 0x55], 1 ; nop ; pop rbp ; ret
0x0000000000400ada : stosd dword ptr [rdi], eax ; nop ; pop rbp ; ret
0x0000000000400bc5 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400bc4 : sub rsp, 8 ; add rsp, 8 ; ret
0x00000000004007ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000400bba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000400876 : test eax, eax ; je 0x400873 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400875 : test rax, rax ; je 0x400874 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400b30 : xor byte ptr [r15], r14b ; ret
0x0000000000400b31 : xor byte ptr [rdi], dh ; ret

Unique gadgets found: 82
